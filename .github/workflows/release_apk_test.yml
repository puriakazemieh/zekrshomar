name: Apk test

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Application version'
        required: true
        default: '1.0'
jobs:
  release_build:
     runs-on: ubuntu-latest
#     if: startsWith(github.ref, 'refs/tags/')

     steps:
       - uses: actions/checkout@v3
       - name: Set up JDK 17
         uses: actions/setup-java@v3
         with:
           java-version: '17'
           distribution: 'temurin'
           cache: gradle

       - name: Cache Gradle and wrapper
         uses: actions/cache@v2
         with:
           path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}


#       - name: Decode Keystore
#         id: decode_keystore
#         uses: timheuer/base64-to-file@v1.2
#         with:
#           fileName: 'android_keystore.jks'
#           fileDir: '/home/runner/work/<<project name>>/<<project name>>/app/keystore/'
#           encodedString: ${{ secrets.KEYSTORE }}
       #1
       - name: Decode Keystore
         env:
           ENCODED_STRING: ${{ secrets.KEYSTORE }}
           SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}

         run: |
           echo $ENCODED_STRING > android_keystore.txt
           SIGNING_KEY_STORE_PATH=$(base64 -d android_keystore.txt)
#           base64 -d android_keystore.txt > $SIGNING_KEY_STORE_PATH

       #2
       - name: Build Release apk
         env:
           SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
           SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
           SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
           SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
         run: ./gradlew assembleRelease

       - name: Build Release bundle
         env:
           SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
           SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
           SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
           SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
         run: ./gradlew bundleRelease
       #3
       - name: ls file apk
         run: ls -la app/build/outputs/apk/release
       - name: ls file bundle
         run: ls -la app/build/outputs/bundle/release

       - name: Upload Release Build to Artifacts
         uses: actions/upload-artifact@v3
         with:
           name: release-artifacts
           path: app/build/outputs/bundle/release/app-release.aab

       - name: Upload Release Build to Artifacts
         uses: actions/upload-artifact@v3
         with:
           name: release-artifacts
           path: app/build/outputs/apk/release/Zekrshomar_1.0.apk
#           paths: |
#            app/build/outputs/apk/release/
#            app/build/outputs/bundle/release/
       #4
       - name: Create Github Release
         uses: softprops/action-gh-release@v1
         with:
           generate_release_notes: true
           prerelease: true
           files: |
             app/build/outputs/apk/release/app-release.apk
             app/build/outputs/bundle/release/app-release.aab
#jobs:
#  build:
#    name: Build Signed APK
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build
#        run: ./gradlew build
#
#      - name: Assemble Release apk
#        run: ./gradlew :app:assembleRelease -x test
#
#      - uses: r0adkll/sign-android-release@v1
#        name: Sign app APK
#        # ID used to access action output
#        id: sign_app
#        with:
#          releaseDirectory: app/build/outputs/apk/release
#          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
#          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
#          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
#        env:
#          # override default build-tools version (29.0.3) -- optional
#          BUILD_TOOLS_VERSION: "30.0.2"
#
#      # Example use of `signedReleaseFile` output -- not needed
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Signed app bundle
#          path: ${{steps.sign_app.outputs.signedReleaseFile}}

#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#
#      - name: Build
#        run: ./gradlew build
#
#      - name: Assemble Release Bundle
#        run: |
#          ./gradlew bundleRelease
#      - name: Sign Release
#        uses: r0adkll/sign-android-release@v1
#        with:
#          releaseDirectory: app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
#          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
#          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
#
#
#      #rename apk to new Version
##      - name: Change version
##        run: ls -la app/build/outputs/bundle/release
#      - name: Change version
#        run:  mv app/build/outputs/bundle/release/app-release.aab  app/build/outputs/bundle/release/Zekrshomar_${{ github.event.inputs.version }}.aab
#
#
#      - name: Upload APK
#        uses: actions/upload-artifact@v3.1.2
#        with:
#          name: Zekrshomar
#          path: app/build/outputs/bundle/release/Zekrshomar_${{ github.event.inputs.version }}.aab

#      - name: Tag Release
#        run: |
#          version_name=${GITHUB_REF##*/}
#          echo "Tagging release with tag $version_name"
#          git tag $version_name release/$version_name
#          git push origin --tags
#      - name: Create service_account.json
#        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json
#
#      - name: Deploy to Alpha
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJson: service_account.json
#          packageName: com.jshvarts.flows
#          releaseFile: app/build/outputs/bundle/release/app-release.aab
#          track: alpha
#          whatsNewDirectory: distribution/

#    steps:
#      - uses: r0adkll/sign-android-release@v1
#        name: Sign app APK
#        # ID used to access action output
#        id: sign_app
#        with:
#          releaseDirectory: app/build/outputs/apk/release
#          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
#          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
#          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
#        env:
#          # override default build-tools version (29.0.3) -- optional
#          BUILD_TOOLS_VERSION: "30.0.2"
#
#      # Example use of `signedReleaseFile` output -- not needed
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Signed app bundle
#          path: ${{steps.sign_app.outputs.signedReleaseFile}}

#      - name: Build Release APK
#        run: ./gradlew assembleRelease
#      - name: Releasing using Hub
#        uses: kyze8439690/action-release-releaseapk@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}
#          APP_FOLDER: app

#      - uses: ilharp/sign-android-release@v1.0.4 # Or use @nightly
#        name: Sign app APK
#        id: sign_app
#        with:
#          releaseDir: app/build/outputs/apk/release
#          signingKey: ${{ secrets.ANDROID_SIGNING_KEY }}
#          keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
#          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
#          buildToolsVersion: 33.0.0
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: Signed app bundle
#          path: ${{steps.sign_app.outputs.signedFile}}

#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#           java-version: '17'
#           distribution: 'temurin'
#           cache: gradle
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build APK
#        run: ./gradlew :app:assembleRelease -x test
#        env:
#          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
#          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
#          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
#
#
#      - name: Releasing using Hub
#        uses: VladDaniliuk/action-release-releaseapk@master
#        env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }}
#           VERSION_VARIABLE: versionName
##           APP_FILE: buildSrc/Android.kt
#           APP_FOLDER: app/build/outputs/apk/release/Zekrshomar.apk
##           CHANGELOG_FILE: ./CHANGELOG.md
##           RELEASE_TITLE: New Build
##           NAME_VARIABLE: app-release.apk
#
##      - uses: iota9star/sign-android-release@v1.0.5
##        name: Sign app APK
##          # ID used to access action output
##        id: sign_app
##        with:
##          releaseDirectory: app/build/outputs/apk/release
###          fileRex: .*apk
##          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
##          alias: ${{ secrets.ALIAS }}
##          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
##          keyPassword: ${{ secrets.KEY_PASSWORD }}
##        env:
##          BUILD_TOOLS_VERSION: "30.0.2"
#
#
#
##      - uses: r0adkll/sign-android-release@v1
##        name: Sign app APK
##        with:
##          releaseDirectory: app/build/outputs/apk/release
##          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
##          alias: ${{ secrets.ALIAS }}
##          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
##          keyPassword: ${{ secrets.KEY_PASSWORD }}
#
#
##      - uses: noriban/sign-android-release@v3
##        id: sign_app
##        with:
##          releaseDirectory: app/build/outputs/apk/release
##          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
##          alias: ${{ secrets.ALIAS }}
##          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
##          keyPassword: ${{ secrets.KEY_PASSWORD }}
##        env:
##          BUILD_TOOLS_VERSION: "30.0.2"
#
#
#
#      # Example use of `signedReleaseFile` output -- not needed
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Signed app bundle
#          path: ${{steps.sign_app.outputs.signedReleaseFile}}

#  release:
#    name: Release APK
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download APK from build
#        uses: actions/download-artifact@v1
#        with:
#          name: Zekrshomar
#      - name: Create Release
#        id: create_release
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: v${{ github.event.inputs.version }}
#          name: Release v${{ github.event.inputs.version }}
#          draft: false
#          prerelease: false
#          files: Zekrshomar/Zekrshomar_${{ github.event.inputs.version }}.aab